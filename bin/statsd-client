#!/usr/bin/env ruby

require 'ideeli/statsd'

def usage
  puts %{usage: statsd-client [action] [[namespace.]metric] [arguments]

  valid actions:

      statsd-client increment [namespace.]metric [sample-rate = 1]
      statsd-client decrement [namespace.]metric [sample-rate = 1]
      statsd-client count [namespace.]metric count [sample-rate = 1]
      statsd-client timing [namespace.]metric time [sample-rate = 1]

  environment variables:

      STATSD_CONFIG     yaml namespace configuration

  example:

      STATSD_HOST=statsd.ideeli.com statsd-client increment deployment

  }

  exit 1
end

def main
  usage if ARGV.empty?

  # third and fourth argument must be numeric if present
  [2, 3].each { |i| ARGV[i] = ARGV[i].to_i if ARGV[i] }

  case action = ARGV.shift
  when 'increment'; Ideeli::Statsd::Client.send(action.to_sym, *ARGV)
  when 'decrement'; Ideeli::Statsd::Client.send(action.to_sym, *ARGV)
  when 'count'    ; Ideeli::Statsd::Client.send(action.to_sym, *ARGV)
  when 'timing'   ; Ideeli::Statsd::Client.send(action.to_sym, *ARGV)
  else raise ArgumentError, "Invalid action: #{action}"
  end
rescue ArgumentError => e
  puts e
  usage
rescue => e
  puts e
end

Ideeli::Statsd::Options.configure do |option|
  option.yaml_file = ENV['STATSD_CONFIG'] if ENV['STATSD_CONFIG']
end

main
